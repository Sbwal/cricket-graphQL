const Mongoose = require('mongoose');
const MatchSchema = new Mongoose.Schema({
    equation: String,
    teamscores: String,
    daynight: String,
    gmt_offset: String,
    group: String,
    league: String,
    live: String,
    livecoverage: String,
    match_Id: String,
    matchfile: String,
    matchnumber: String,
    matchresult: String,
    matchstatus: String,
    matchdate_gmt: String,
    matchdate_ist: String,
    matchdate_local: String,
    matchtime_gmt: String,
    matchtime_ist: String,
    matchtime_local: String,
    end_matchdate_gmt: String,
    end_matchdate_ist: String,
    end_matchdate_local: String,
    end_matchtime_gmt: String,
    end_matchtime_ist: String,
    end_matchtime_local: String,
    matchtype: String,
    priority: String,
    recent: String,
    series_Id: String,
    seriesname: String,
    series_short_display_name: String,
    series_type: String,
    series_start_date: String,
    series_end_date: String,
    toss_elected_to: String,
    toss_won_by: String,
    parent_id: String,
    parent_name: String,
    has_standings: String,
    match_ordinal: String,
    coverage_level_id: String,
    coverage_level: String,
    has_scores: String,
    has_comm: String,
    teama_hassquads: String,
    teamb_hassquads: String,
    matchstatus_Id: String,
    comp_type: String,
    comp_type_id: String,
    championship_id: String,
    championship_name: String,
    stage: String,
    teama: String,
    teama_short: String,
    teama_Id: String,
    teamb: String,
    teamb_short: String,
    teamb_Id: String,
    tour_Id: String,
    tourname: String,
    upcoming: String,
    venue: String,
    venue_Id: String,
    winningmargin: String,
    winningteam_Id: String,
    SeriesStatus: String,
    Isso: String,
    audience_id: String,
    audience_type: String
}, {
    collection: 'matches'
});

const MatchModel = Mongoose.model('matches', MatchSchema)

module.exports = MatchModel;